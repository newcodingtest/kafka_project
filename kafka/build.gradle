buildscript {
    ext {
        springBootVersion = '2.7.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.15.RELEASE"
    }
}

allprojects {}

//하위 모든 프로젝트 공통 세팅
subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.kafka'
    version = '1.0'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }
    //하위모듈에서 공통적으로 적용되는 의존성
    dependencies {
        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        implementation 'org.springframework.kafka:spring-kafka:2.5.10.RELEASE'
        implementation 'org.springframework.boot:spring-boot-starter-web:2.3.4.RELEASE'
        implementation 'com.google.code.gson:gson:2.8.6'

    }
}

project(':kafka-producer') {
    bootJar { enabled = false }
    jar { enabled = true }
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.apache.kafka:kafka-clients:2.5.0'
        implementation 'org.springframework.kafka:spring-kafka:2.9.2'
    }
}


project(':kafka-consumer') {
    bootJar { enabled = false }
    jar { enabled = true }
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        //implementation 'org.apache.kafka:kafka-clients:2.5.0'
        implementation 'org.springframework.kafka:spring-kafka:2.9.2'
    }
}